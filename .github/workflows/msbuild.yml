name: MSBuild

on:
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  BUILD_CONFIGURATION: Release

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@main
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup environment variables
        run: |
          $cmdOutput = Split-Path -Path $pwd -Leaf
          $_ver = "1.0.$(git rev-list HEAD --count)-$(git rev-parse --short=8 HEAD)"
          echo "commit_ver=$_ver" >> "$Env:GITHUB_ENV"
          echo "zip_name=$cmdOutput-$_ver" >> "$Env:GITHUB_ENV"
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@main
      - name: Build x64
        run: msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform=x64 -maxcpucount:1 Windows-Game-Patches-x64.sln
      - name: Build Win32
        run: msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform=x86 -maxcpucount:1 Windows-Game-Patches-Win32.sln
      - name: Create Release
        if: |
          github.event_name == 'workflow_dispatch' &&
          github.repository == 'illusion0001/Windows-Game-Patches'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $hashMarkdown = @'
          {0}

          <details>
          <summary>ASI Plugin Hashes (Click to Expand)</summary>

          ```yaml
          {1}
          ```

          </details>
          '@ -f (Get-Content ".github\README.md" | Out-String), (Get-Content "${{ env.BUILD_CONFIGURATION }}\dist\hashes.txt" | Out-String)
          $hashMarkdown | Out-File -FilePath hash.md
          Get-Content hash.md

          $compress = @{
            Path             = "${{ env.BUILD_CONFIGURATION }}\dist\*", "${{ env.BUILD_CONFIGURATION }}\*.pdb"
            DestinationPath  = "${{ env.zip_name }}.zip"
          }
          Compress-Archive @compress
          gh release create ${{ env.commit_ver }} ${{ env.ZIP_NAME }}.zip --target ${{ GITHUB.SHA }} -t "${{ env.commit_ver }}" -F hash.md # --draft --prerelease
